 "Carga completa en navegador",
      "checkpoint": "StartScreen visible y navegable"
    },
    "conectividad_apis": {
      "objetivo": "Conexi√≥n funcional con Gemini APIs", 
      "validacion": "Test de generaci√≥n exitoso",
      "checkpoint": "Respuesta de API sin error 403/401"
    },
    "configuracion_segura": {
      "objetivo": "Variables de entorno configuradas correctamente",
      "validacion": "API keys accesibles desde c√≥digo",
      "checkpoint": "Sin exposici√≥n de secrets en cliente"
    },
    "compatibilidad_migracion": {
      "objetivo": "Resolver conflictos de migraci√≥n Google",
      "validacion": "Sin errores relacionados a OAuth/Security",
      "checkpoint": "Pol√≠ticas de seguridad compatibles"
    }
  }
}
R - REFACTOR (Preparaci√≥n Incremental)
json
{
  "pasos_configuracion_entorno": {
    "paso_1": {
      "accion": "Verificar estado actual de la aplicaci√≥n",
      "tiempo": "2 minutos",
      "validacion": "App inicia correctamente"
    },
    "paso_2": {
      "accion": "Diagnosticar errores de migraci√≥n Google",
      "tiempo": "3 minutos",
      "validacion": "Identificar restricciones espec√≠ficas"
    },
    "paso_3": {
      "accion": "Configurar variables de entorno seguras",
      "tiempo": "3 minutos", 
      "validacion": "API keys funcionando"
    },
    "paso_4": {
      "accion": "Resolver conflictos CORS y dominios",
      "tiempo": "5 minutos",
      "validacion": "Conexiones API exitosas"
    },
    "paso_5": {
      "accion": "Testing completo de funcionalidad b√°sica",
      "tiempo": "2 minutos",
      "validacion": "Sistema base operativo"
    }
  }
}
üåê CONFIGURACI√ìN ESPEC√çFICA ENTORNO WEB
Verificaciones de Migraci√≥n Google
bash
# Comandos de diagn√≥stico recomendados
npm run dev  # Verificar inicio sin errores
curl -X GET "localhost:5000"  # Verificar servidor responde
npm audit  # Verificar dependencias seguras
npm ls @google/genai  # Verificar versi√≥n API Google
Variables de Entorno Seguras
text
# Configuraci√≥n recomendada para Replit Secrets
GOOGLE_API_KEYS=key1,key2,key3...  # Lista separada por comas
GEMINI_MODELS=gemini-pro,gemini-flash,gemini-flash-lite
ENVIRONMENT=development
NODE_ENV=development
CORS_ORIGIN=*.replit.dev,*.replit.co
Configuraci√≥n CORS Anti-Restricciones
javascript
// Configuraci√≥n CORS recomendada para evitar bloqueos Google
const corsOptions = {
  origin: [
    'https://*.replit.dev', 
    'https://*.replit.co',
    'http://localhost:5000'
  ],
  methods: ['GET', 'POST', 'OPTIONS'],
  allowedHeaders: ['Content-Type', 'Authorization', 'X-Requested-With'],
  credentials: false  // Evitar problemas cookies/auth
};
üîç DIAGN√ìSTICO DE PROBLEMAS MIGRACION GOOGLE
Problemas Comunes Detectables
json
{
  "restricciones_google_posibles": {
    "oauth_domain_verification": {
      "error": "Domain not authorized",
      "solucion": "Configurar dominio Replit en Google Console"
    },
    "api_key_restrictions": {
      "error": "API key restricted by IP/domain",
      "solucion": "Remover restricciones o agregar *.replit.dev"
    },
    "quota_exceeded_early": {
      "error": "Quota exceeded unexpectedly",
      "solucion": "Verificar quotas en Google AI Studio"
    },
    "cors_preflight_failure": {
      "error": "CORS preflight failed",
      "solucion": "Configurar headers apropiados"
    }
  }
}
‚ö° VALIDACIONES CHECKPOINT POR PASO
Checkpoint 1: Estado Base
bash
# Validaciones autom√°ticas
- [ ] npm run dev inicia sin errores
- [ ] Puerto 5000 accesible
- [ ] StartScreen carga completamente
- [ ] Console sin errores cr√≠ticos
Checkpoint 2: APIs Google
bash
# Tests de conectividad
- [ ] geminiService responde a test call
- [ ] No errores 401/403 en network tab
- [ ] API keys v√°lidas y activas
- [ ] Quotas disponibles verificadas
Checkpoint 3: Seguridad
bash
# Validaciones seguridad
- [ ] API keys NO expuestas en cliente
- [ ] Variables entorno cargadas correctamente
- [ ] CORS configurado apropiadamente  
- [ ] Sin warnings de seguridad en console
Checkpoint 4: Migraci√≥n
bash
# Verificaci√≥n espec√≠fica migraci√≥n
- [ ] Sin conflictos OAuth
- [ ] Dominios autorizados en Google Console
- [ ] Pol√≠ticas seguridad compatibles
- [ ] Sin errores relacionados a migraci√≥n
Checkpoint 5: Funcionalidad
bash
# Testing funcional b√°sico
- [ ] StoryBuilder navega entre fases
- [ ] Editor muestra interfaz (aunque incompleto)
- [ ] Generaci√≥n de contenido funciona
- [ ] Persistencia de proyectos activa
üéØ INSTRUCCIONES ESPEC√çFICAS PARA REPLIT
Mensaje para iniciar diagn√≥stico:

text
AN√ÅLISIS INICIAL REQUERIDO:

1. Ejecuta `npm run dev` y reporta cualquier error de inicio
2. Verifica que la aplicaci√≥n carga en puerto 5000
3. Inspecciona Network tab para errores API (especialmente 401/403/CORS)
4. Revisa Console para warnings de migraci√≥n/seguridad Google
5. Testa una llamada b√°sica a geminiService

SOLO despu√©s de este an√°lisis, procede con correcciones incrementales.

REGLA CR√çTICA: Si detectas problemas de autorizaci√≥n/migraci√≥n Google, PAUSA inmediatamente y reporta antes de hacer cambios.
üìä PROTOCOLO DE DECISI√ìN POST-DIAGN√ìSTICO
SI TODO EST√Å BIEN:
‚úÖ Continuar con FASE 1 (Sistema API Keys)

‚úÖ Aplicar mejoras estructurales planificadas

‚úÖ Proceder con autonom√≠a MEDIUM

SI HAY PROBLEMAS MENORES:
üîß Corregir configuraci√≥n CORS/dominios

üîß Ajustar variables de entorno

üîß Continuar con precauci√≥n

SI HAY PROBLEMAS CR√çTICOS:
üö® PAUSA inmediata

üö® Reportar problemas espec√≠ficos

üö® Solicitar input antes de continuar

üö® Considerar rollback si es necesario

üí° RESULTADO ESPERADO FASE 0
Estado Final Deseado:
‚úÖ Aplicaci√≥n web carga sin errores

‚úÖ APIs Google/Gemini completamente funcionales

‚úÖ Variables de entorno seguras y accesibles

‚úÖ Sin conflictos de migraci√≥n o seguridad

‚úÖ Base s√≥lida para implementar mejoras

Documentaci√≥n Generada:
‚úÖ Reporte de estado actual del entorno

‚úÖ Lista de problemas encontrados y resueltos

‚úÖ Configuraci√≥n final de variables/CORS

‚úÖ Validaci√≥n completa de conectividad APIs

üöÄ MENSAJE FINAL PARA REPLIT AGENT
text
Ejecuta FASE 0 con m√°xima precauci√≥n:

1. DIAGN√ìSTICA antes de cambiar
2. REPORTA problemas encontrados  
3. CORRIGE incrementalmente
4. VALIDA cada paso
5. CONFIRMA estado final

Objetivo: Base web s√≥lida y segura para futuras mejoras.

¬øEst√°s listo para iniciar diagn√≥stico del entorno web?